vs2013 引用外部程序 exe文件和debug（release）放在同一文件夹
{
    TCHAR lpBin[MAX_PATH];
	InitPath(lpBin, NULL, NULL);
	CString name = _T("MicroScope.exe");
	ShellExecute(NULL, _T("open"), name, NULL, lpBin, SW_SHOWNORMAL);
}

vs2013 most basic c++ show string
#include<iostream>
int main()
{
	std::cout << "Enter two numbers:" << std::endl;

	int v1 = 0, v2 = 0;
	std::cin >> v1 >> v2;
	std::cout << "The sum of " << v1 << " and " << v2
		<< " is " << v1 + v2 << std::endl;
	return 0;
}

vs2013 简单的加和显示 while语句（return 0 不间断点 无法显示）
#include <iostream>
int main()
{
	int sum = 0, val = 1;
	while (val<=10)
	{
		sum += val;
		++val;
	}
	std::cout << "Sum of 1 to 10 is" << sum << std::endl;
	return 0;
}



vs加和显示 for循环 （解决了 运行无法显示的问题 加上 system("pasuse") 即可 ）
#include <iostream>
int main()
{
	int sum = 0;
	for (int val = 1; val <= 10;++val)
	sum += val;
	std::cout << "Sum of 1 to 10 is" << sum << std::endl;
	system("pause");
	return 0;
}

#include <iostream>
int main()
{
	int sum = 0, value = 0;
	
	while (std::cin >> value)
	{
		sum += value;
	}
	std::cout << "Sum  is" << sum << std::endl;
	system("pause");
	return 0;
}

#include<iostream>
int main()
{
	int currVal = 0, val = 0;

	if (std::cin>>currVal)
	{
		int cnt = 1;
		while (std::cin >> val)
		{ 
			if (val == currVal)
				++cnt;
			else
			{
				std::cout << currVal << " occurs " << cnt << " times "<<std::endl;
				currVal = val;
				cnt = 1;
			}
		}
		std::cout << currVal << " occurs " << cnt << " times " << std::endl;
	}
	system("pause");
	return 0;
}

类：定义了一个类型，以及与其相关联的一组操作，是c++最重要的特性之一。
对于书店程序，定义类名为Sale_item
头文件 Sale_item.h中已经定义了。
为了使用标准库，，必须包相应的头文件。
我们可以定义类类型的变量，类定义了对类的对象你可以执行的操作。
标准库头文件使用<>,非标准库使用 ""

库的相关操作 默认搜索默认目录下 把.h文件包括过去即可
#include<iostream>
#include"Sales_item.h"
int main()
{
	Sales_item item1, item2;
	std::cin >> item1 >> item2;
	std::cout << item1 + item2 << std::endl;
	system("pause");
	return 0;
}

#include<iostream>
#include"Sales_item.h"
int main()
{
	Sales_item total;
	if (std::cin >> total)
	{
		Sales_item trans;
		while (std::cin >> trans)
		{
			if (total.isbn() == trans.isbn())
				total = total + trans;
			else{
				std::cout << total << std::endl;
			    }
		}
		std::cout << total << std::endl;
	}
	else{
		std::cout << "Your input is wrong" << std::endl;
		return -1;
	}
	system("pause");
	return 0;
}

struct Sales_data {
	std::string bookNo;
	unsigned units_sold = 0;
	double revenue = 0.0;

};

#include<iostream>
using std::cin;
using std::cout;
int main()
{
	int i;
	cin >> i;
	cout << i;
	system("pause");
	return 0;
}

#include<iostream>
using std::cin;
using std::cout;
using std::endl;
int main()
{
	cout << "Enter two numbers" << endl;
	int v1, v2;
	cin >> v1 >> v2;
	cout << "the number of " << v1 << "and" << v2 << "is" << v1+v2<<endl;
	system("pause");
	return 0;
}

  #include<iostream>
#include<string>
using std::string;
using std::cin;
using std::cout;
using std::endl;
int main()
{
	string s;
	cin >> s;
	cout << s << endl;
	system("pause");
	return 0;
}

#include<iostream>
#include<string>
using std::string;
using std::cin;
using std::cout;
using std::endl;
int main()
{
	string word;
	while (cin >> word)
		cout << word << endl;
	system("pause");
	return 0;
}

#include<iostream>
#include<string>
using std::string;
using std::cin;
using std::cout;
using std::endl;
int main()
{
	string str("some string");
	for (auto c : str)
		cout <<  c << endl;
	system("pause");
	return 0;

}

#include<iostream>
#include<string>
using std::string;
using std::cin;
using std::cout;
using std::endl;
int main()
{
	string s("Hello world!!");
	decltype(s.size()) punct_cnt = 0;
	for (auto c : s)
		if (ispunct(c))
			++punct_cnt;
		cout <<  punct_cnt<<"punctuation characters is in the "<<s<< endl;
	system("pause");
	return 0;

}

#include<iostream>
#include<string>
using std::string;
using std::cin;
using std::cout;
using std::endl;
int main()
{
	string s("Hello world!!");
	for (auto &c : s)
		c = toupper(c);
		cout << s<< endl;
	system("pause");
	return 0;

}

#include<iostream>
#include<string>
using std::string;
using std::cin;
using std::cout;
using std::endl;
int main()
{
	string s("Hello world!!");
	for (
		decltype(s.size()) index = 0;
		index != s.size() && ! isspace (s[index]); ++index)
	s[index] = toupper(s[index]);
			cout << s << endl;
	system("pause");
	return 0;

}

  #include<iostream>
#include<string>
using std::string;
using std::cin;
using std::cout;
using std::endl;
int main()
{
	string s("0123456789ABCDEF");
	cout << "Enter a  series of numbers between 0 and 15 separted by spaces. Hit Enter when finished" << endl;
	string result;
	string::size_type n;
	while (cin >> n)
	if (n < s.size())
		result = result + s[n];
			cout << "Your result is " <<result<< endl;
	system("pause");
	return 0;
}

#include<iostream>
#include<vector>
using namespace std;
int main()
{
	vector<int>v;
	int num;
	cin >> num;
	int a;
	for (int i = 0; i < num; i++)
	{
		cin >> a;
		v.push_back(a);
	}
	for (auto i : v)
	{
		cout << i << endl;
	}
}
  
  #include<iostream>
#include<vector>
using namespace std;
int main()
{
	vector<int>v{1,2,3,4,5,6,7,8,9};
	for (auto &i : v)
		i = i*i;
	for (auto &i : v)
		cout << i << endl;
	system("pause");
	return 0;
}

#include<iostream>
#include<vector>
using namespace std;
int main()
{
	vector <unsigned> scores(11, 0);
	unsigned grade;
	while (cin >> grade)
	{
		if (grade <= 100)
			++scores[grade / 10];
	}
	for (int i = 0; i < scores.size(); i++)
	{
		cout << scores[i] << endl;
	}
	system("pause");
	return 0;
}

#include<iostream>
#include<vector>
using namespace std;
int main()
{
	string s("some string");
	if (s.begin() != s.end())
	{
		auto it = s.begin();
		*it = toupper(*it);

	}
	for (int i = 0; i < s.size(); i++)
	{
		cout << s[i] << endl;
	}
	system("pause");
	return 0;
}

#include<iostream>
#include<vector>
#include <string>
using namespace std;
int main()
{
	cout << "输入一个整数: ";
	int grade;
	cin >> grade ;
	const vector<string> scores = { "F", "D", "C", "B", "A", "A++" };
	string graderesult;
	if (grade < 60)
		graderesult = scores[0];
	else{
		graderesult = scores[(grade - 50) / 10];
		if (grade != 100)
			if (grade % 10 > 7)
				graderesult = graderesult + "++";
			else if(grade % 10 < 3)
			graderesult = graderesult + "--";
		}
	cout << graderesult << endl;
	system("pause");                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             
	return 0;
}

#include<iostream>
#include<vector>
#include <string>
using namespace std;
int main()
{
	cout << "输入一串字符: " << endl;
	unsigned acnt = 0, ecnt = 0, icnt = 0, ocnt = 0, ucnt = 0;
	char ch;
	while (cin >> ch)
	{
		switch (ch)
		{
		case 'a':
			++acnt;
			break;
		case 'e':
			++ecnt;
			break;
		case 'i':
			++icnt;
			break;
		case 'o':
			++ocnt;
			break;
		case 'u':
			++ucnt;
			break;
		}

	}
	cout << "Number of a is" << acnt << '\n' << "Number of e is" << ecnt << '\n' << "Number of i is" << icnt << '\n' << "Number of o is" << ocnt << '\n' << "Number of u is" << ucnt << endl;
	system("pause");                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             
	return 0;
}

#include<iostream>
using namespace std;
int fact(int val)
	{
		int ret = 1;
		while (val > 1)
			ret = ret*val--;
		return ret;
	}
	
int fact(int);
int main()
{

	int j = fact(5);
	cout << "the result is " << j << endl;
	system("pause");
	return 0;
}


#include<iostream>
#include<string>
using namespace std;
char &get_val(string &str, string::size_type ix)
{
	return str[ix];
}
int main()
{
	string s("a value");
	get_val(s, 1) = 's';
	cout << s << endl;

	system("pause");
	return 0;
}

#读取图片
from PIL import Image
img=Image.open('lena.png')
img.show()

#直方图显示
import numpy as np
import cv2 as cv
from matplotlib import pyplot as plt
img = cv.imread('lena.png',0)
plt.hist(img.ravel(),256,[0,256]); plt.show()

#直方图均衡
import numpy as np
import cv2 as cv
from matplotlib import pyplot as plt
img = cv.imread('lena.png',0)
hist,bins = np.histogram(img.flatten(),256,[0,256])
cdf = hist.cumsum()
cdf_normalized = cdf * float(hist.max()) / cdf.max()
plt.plot(cdf_normalized, color = 'b')
plt.hist(img.flatten(),256,[0,256], color = 'r')
plt.xlim([0,256])
plt.legend(('cdf','histogram'), loc = 'upper left')
plt.show()

#傅里叶变换
import cv2 as cv
import numpy as np
from matplotlib import pyplot as plt
img = cv.imread('lena.png',0)
f = np.fft.fft2(img)
fshift = np.fft.fftshift(f)
magnitude_spectrum = 20*np.log(np.abs(fshift))
plt.subplot(121),plt.imshow(img, cmap = 'gray')
plt.title('Input Image'), plt.xticks([]), plt.yticks([])
plt.subplot(122),plt.imshow(magnitude_spectrum, cmap = 'gray')
plt.title('Magnitude Spectrum'), plt.xticks([]), plt.yticks([])
plt.show

#分水岭算法
import numpy as np
import cv2 as cv
from matplotlib import pyplot as plt
img = cv.imread('lena.png')
print(img.shape)
gray = cv.cvtColor(img,cv.COLOR_BGR2GRAY)
print(gray.shape)
ret, thresh = cv.threshold(gray,0,255,cv.THRESH_BINARY_INV+cv.THRESH_OTSU)
# noise removal
kernel = np.ones((3,3),np.uint8)
opening = cv.morphologyEx(thresh,cv.MORPH_OPEN,kernel, iterations = 2)
# sure background area
sure_bg = cv.dilate(opening,kernel,iterations=3)
# Finding sure foreground area
dist_transform = cv.distanceTransform(opening,cv.DIST_L2,5)
ret, sure_fg = cv.threshold(dist_transform,0.7*dist_transform.max(),255,0)
# Finding unknown region
sure_fg = np.uint8(sure_fg)
unknown = cv.subtract(sure_bg,sure_fg)
# Marker labelling
ret, markers = cv.connectedComponents(sure_fg)
# Add one to all labels so that sure background is not 0, but 1
markers = markers+1
# Now, mark the region of unknown with zero
markers[unknown==255] = 0
markers = cv.watershed(img,markers)
img[markers == -1] = [255,0,0]
plt.figure()
plt.imshow(markers,'gray')
plt.show()

#grabcut
import numpy as np
import cv2 as cv
from matplotlib import pyplot as plt
img = cv.imread('lena.png')
mask = np.zeros(img.shape[:2],np.uint8)
bgdModel = np.zeros((1,65),np.float64)
fgdModel = np.zeros((1,65),np.float64)
rect = (50,50,450,290)
cv.grabCut(img,mask,rect,bgdModel,fgdModel,5,cv.GC_INIT_WITH_RECT)
mask2 = np.where((mask==2)|(mask==0),0,1).astype('uint8')
img = img*mask2[:,:,np.newaxis]
plt.imshow(img),plt.colorbar(),plt.show()

#SIFT
#见MATLAB