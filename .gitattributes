# Auto detect text files and perform LF normalization
* text=auto

这是一个学习笔记，所有关于学习的记录都会在这里。
2018.11.28 粗略学习了c标准库，这本书太难，不适合现在的我，准备学基础的c++
购买了c++ primer第五版，90元，开始学习
第一天学习学个屁，20181129
const是一个限定符，被它修饰的变量的值不能改变。对于一般的变量来说，其实没有顶层const和底层const的区别，而只有向指针这类复合类型的基本变量，才有这样的区别。
C++有类模板，也有函数模板，vector是一个类模板，模板不是类，但是编译器根据模板创建类。需要指定一些信息，来使模板来实例化为类，形式为模板名字+尖括号+尖括号内信息。
迭代器用来访问string内的元素或者vector的元素，vector和string都支持下标运算符，也都支持迭代器。
const_iterator和常量指针差不多，能读取而不能修改它所指的元素值，iterator可读可写。
*解引用 .成员访问  it→mem 等价于 (*it).mem，已知的限制是不能在for循环内向迭代器添加元素，也不能进行改变对象容量的操作，否则会使其失效。
数组和vector的区别在于，数组没有名字，通过位置来访问，而且大小一定，不能随意改变，在一些程序里面性能较好，但是也损失了一些灵活性。
使用for循环下标来访问数组。
这傻逼东西老子有点醉 好几把男
double型数据不能用于精确比较，int用于精确比较
函数重载只比较参数个数和参数类型 若相同 则为相同函数
在函数调试时确定具体的问题 然后单步调试或者进步函数内部调试
每次测试之后都要对函数模块进行充分调试
8位构成一个字节  int=4字节 char=1字节 
数组名本身就是数组的地址
strcpy需要string.h的头文件

发现error C4335: 检测到 Mac 文件格式: 请将源文件转换为 DOS 格式或 UNIX 格式
添加包含头文件#include<stdlib.h>

“fatal error C1083: ”无法打开包括文件
如何解决 “fatal error C1083: ”无法打开包括文件
最开始重新导入项目时，遇到过 "fatal error C1083"这个错误，当时经同事指点，改了加载头文件的附加路径，问题很容易就解决。今天将整个工程改的编译方式改为Release方式，再次遇到"fatal error C1083"，决心将具体的解决方法以图文的方式记录下来，一方面加深自己的印象，另一方面，也方便遇到类似问题的同学找到快速解决方案。
步骤1：定位报“fatal error C1083： ”错误的文件，找到它所在的目录。
步骤2：添加该项目的附加路径 。如图所示：
1）右键查看该项目的属性
2）点击配置属性——〉  C/C++  ——〉  常规  ——〉 附加包含目录——〉将报错文件所在目录添加进去
3） 将项目的本地路径替换为工程相对路径
 工程根目录为：$(ProjectDir)
其子目录inc为：$(ProjectDir)inc

图一：右键“工程”属性
 
图二：添加附加目录

图三：修改附加目录相对路径
4）点击“确定”按钮。
步骤3： 重新编译生成，问题可以得到有效解决。