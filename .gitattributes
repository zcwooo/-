vs2013 引用外部程序 exe文件和debug（release）放在同一文件夹
{
    TCHAR lpBin[MAX_PATH];
	InitPath(lpBin, NULL, NULL);
	CString name = _T("MicroScope.exe");
	ShellExecute(NULL, _T("open"), name, NULL, lpBin, SW_SHOWNORMAL);
}

vs2013 most basic c++ show string
#include<iostream>
int main()
{
	std::cout << "Enter two numbers:" << std::endl;

	int v1 = 0, v2 = 0;
	std::cin >> v1 >> v2;
	std::cout << "The sum of " << v1 << " and " << v2
		<< " is " << v1 + v2 << std::endl;
	return 0;
}

vs2013 简单的加和显示 while语句（return 0 不间断点 无法显示）
#include <iostream>
int main()
{
	int sum = 0, val = 1;
	while (val<=10)
	{
		sum += val;
		++val;
	}
	std::cout << "Sum of 1 to 10 is" << sum << std::endl;
	return 0;
}



vs加和显示 for循环 （解决了 运行无法显示的问题 加上 system("pasuse") 即可 ）
#include <iostream>
int main()
{
	int sum = 0;
	for (int val = 1; val <= 10;++val)
	sum += val;
	std::cout << "Sum of 1 to 10 is" << sum << std::endl;
	system("pause");
	return 0;
}

#include <iostream>
int main()
{
	int sum = 0, value = 0;
	
	while (std::cin >> value)
	{
		sum += value;
	}
	std::cout << "Sum  is" << sum << std::endl;
	system("pause");
	return 0;
}

#include<iostream>
int main()
{
	int currVal = 0, val = 0;

	if (std::cin>>currVal)
	{
		int cnt = 1;
		while (std::cin >> val)
		{ 
			if (val == currVal)
				++cnt;
			else
			{
				std::cout << currVal << " occurs " << cnt << " times "<<std::endl;
				currVal = val;
				cnt = 1;
			}
		}
		std::cout << currVal << " occurs " << cnt << " times " << std::endl;
	}
	system("pause");
	return 0;
}

类：定义了一个类型，以及与其相关联的一组操作，是c++最重要的特性之一。
对于书店程序，定义类名为Sale_item
头文件 Sale_item.h中已经定义了。
为了使用标准库，，必须包相应的头文件。
我们可以定义类类型的变量，类定义了对类的对象你可以执行的操作。
标准库头文件使用<>,非标准库使用 ""

库的相关操作 默认搜索默认目录下 把.h文件包括过去即可
#include<iostream>
#include"Sales_item.h"
int main()
{
	Sales_item item1, item2;
	std::cin >> item1 >> item2;
	std::cout << item1 + item2 << std::endl;
	system("pause");
	return 0;
}

#include<iostream>
#include"Sales_item.h"
int main()
{
	Sales_item total;
	if (std::cin >> total)
	{
		Sales_item trans;
		while (std::cin >> trans)
		{
			if (total.isbn() == trans.isbn())
				total = total + trans;
			else{
				std::cout << total << std::endl;
			    }
		}
		std::cout << total << std::endl;
	}
	else{
		std::cout << "Your input is wrong" << std::endl;
		return -1;
	}
	system("pause");
	return 0;
}

struct Sales_data {
	std::string bookNo;
	unsigned units_sold = 0;
	double revenue = 0.0;

};

#include<iostream>
using std::cin;
using std::cout;
int main()
{
	int i;
	cin >> i;
	cout << i;
	system("pause");
	return 0;
}

#include<iostream>
using std::cin;
using std::cout;
using std::endl;
int main()
{
	cout << "Enter two numbers" << endl;
	int v1, v2;
	cin >> v1 >> v2;
	cout << "the number of " << v1 << "and" << v2 << "is" << v1+v2<<endl;
	system("pause");
	return 0;
}

  #include<iostream>
#include<string>
using std::string;
using std::cin;
using std::cout;
using std::endl;
int main()
{
	string s;
	cin >> s;
	cout << s << endl;
	system("pause");
	return 0;
}

#include<iostream>
#include<string>
using std::string;
using std::cin;
using std::cout;
using std::endl;
int main()
{
	string word;
	while (cin >> word)
		cout << word << endl;
	system("pause");
	return 0;
}

#include<iostream>
#include<string>
using std::string;
using std::cin;
using std::cout;
using std::endl;
int main()
{
	string str("some string");
	for (auto c : str)
		cout <<  c << endl;
	system("pause");
	return 0;

}

#include<iostream>
#include<string>
using std::string;
using std::cin;
using std::cout;
using std::endl;
int main()
{
	string s("Hello world!!");
	decltype(s.size()) punct_cnt = 0;
	for (auto c : s)
		if (ispunct(c))
			++punct_cnt;
		cout <<  punct_cnt<<"punctuation characters is in the "<<s<< endl;
	system("pause");
	return 0;

}

#include<iostream>
#include<string>
using std::string;
using std::cin;
using std::cout;
using std::endl;
int main()
{
	string s("Hello world!!");
	for (auto &c : s)
		c = toupper(c);
		cout << s<< endl;
	system("pause");
	return 0;

}

#include<iostream>
#include<string>
using std::string;
using std::cin;
using std::cout;
using std::endl;
int main()
{
	string s("Hello world!!");
	for (
		decltype(s.size()) index = 0;
		index != s.size() && ! isspace (s[index]); ++index)
	s[index] = toupper(s[index]);
			cout << s << endl;
	system("pause");
	return 0;

}

  #include<iostream>
#include<string>
using std::string;
using std::cin;
using std::cout;
using std::endl;
int main()
{
	string s("0123456789ABCDEF");
	cout << "Enter a  series of numbers between 0 and 15 separted by spaces. Hit Enter when finished" << endl;
	string result;
	string::size_type n;
	while (cin >> n)
	if (n < s.size())
		result = result + s[n];
			cout << "Your result is " <<result<< endl;
	system("pause");
	return 0;
}

#include<iostream>
#include<vector>
using namespace std;
int main()
{
	vector<int>v;
	int num;
	cin >> num;
	int a;
	for (int i = 0; i < num; i++)
	{
		cin >> a;
		v.push_back(a);
	}
	for (auto i : v)
	{
		cout << i << endl;
	}
}
  
  #include<iostream>
#include<vector>
using namespace std;
int main()
{
	vector<int>v{1,2,3,4,5,6,7,8,9};
	for (auto &i : v)
		i = i*i;
	for (auto &i : v)
		cout << i << endl;
	system("pause");
	return 0;
}

#include<iostream>
#include<vector>
using namespace std;
int main()
{
	vector <unsigned> scores(11, 0);
	unsigned grade;
	while (cin >> grade)
	{
		if (grade <= 100)
			++scores[grade / 10];
	}
	for (int i = 0; i < scores.size(); i++)
	{
		cout << scores[i] << endl;
	}
	system("pause");
	return 0;
}

#include<iostream>
#include<vector>
using namespace std;
int main()
{
	string s("some string");
	if (s.begin() != s.end())
	{
		auto it = s.begin();
		*it = toupper(*it);

	}
	for (int i = 0; i < s.size(); i++)
	{
		cout << s[i] << endl;
	}
	system("pause");
	return 0;
}

#include<iostream>
#include<vector>
#include <string>
using namespace std;
int main()
{
	cout << "输入一个整数: ";
	int grade;
	cin >> grade ;
	const vector<string> scores = { "F", "D", "C", "B", "A", "A++" };
	string graderesult;
	if (grade < 60)
		graderesult = scores[0];
	else{
		graderesult = scores[(grade - 50) / 10];
		if (grade != 100)
			if (grade % 10 > 7)
				graderesult = graderesult + "++";
			else if(grade % 10 < 3)
			graderesult = graderesult + "--";
		}
	cout << graderesult << endl;
	system("pause
	return 0;
}

#include<iostream>
#include<vector>
#include <string>
using namespace std;
int main()
{
	cout << "输入一串字符: " << endl;
	unsigned acnt = 0, ecnt = 0, icnt = 0, ocnt = 0, ucnt = 0;
	char ch;
	while (cin >> ch)
	{
		switch (ch)
		{
		case 'a':
			++acnt;
			break;
		case 'e':
			++ecnt;
			break;
		case 'i':
			++icnt;
			break;
		case 'o':
			++ocnt;
			break;
		case 'u':
			++ucnt;
			break;
		}

	}
	cout << "Number of a is" << acnt << '\n' << "Number of e is" << ecnt << '\n' << "Number of i is" << icnt << '\n' << "Number of o is" << ocnt << '\n' << "Number of u is" << ucnt << endl;
	system("pause
	return 0;
}

#include<iostream>
using namespace std;
int fact(int val)
	{
		int ret = 1;
		while (val > 1)
			ret = ret*val--;
		return ret;
	}
	
int fact(int);
int main()
{

	int j = fact(5);
	cout << "the result is " << j << endl;
	system("pause");
	return 0;
}


#include<iostream>
#include<string>
using namespace std;
char &get_val(string &str, string::size_type ix)
{
	return str[ix];
}
int main()
{
	string s("a value");
	get_val(s, 1) = 's';
	cout << s << endl;

	system("pause");
	return 0;
}


flag = False
name = 'luren'
if name == 'python':         # 判断变量否为'python'
    flag = True          # 条件成立时设置标志为真
    print ('welcome boss')    # 并输出欢迎信息
else:
    print ('name')              # 条件不成立时输出变量名称
	# 例3：if语句多个条件
 
num = 9
if num >= 0 and num <= 10:    # 判断值是否在0~10之间
    print 'hello'
# 输出结果: hello
 
num = 10
if num < 0 or num > 10:    # 判断值是否在小于0或大于10
    print 'hello'
else:
    print 'undefine'
# 输出结果: undefine
 
num = 8
# 判断值是否在0~5或者10~15之间
if (num >= 0 and num <= 5) or (num >= 10 and num <= 15):    
    print 'hello'
else:
    print 'undefine'
# 输出结果: undefine

#include<windows.h>    //包含windows.h头文件

LRESULT CALLBACK WindowProc( HWND , UINT ,WPARAM , LPARAM ); //声明窗口函数

 

int APIENTRY WinMain(HINSTANCE hinstance ,HINSTANCE hPrevinstance , LPSTR lpcmdLine , int nCmdShow)     //MFC下的程序入口函数WinMain(),传统的dos程序是以main()作为程序入口的，这一点不同

{

                  WNDCLASSwndclass;    //定义窗口类结构体变量

                  HWNDhwnd;  //定义窗口类句柄

                  MSGmsg;        //定义消息结构体变量

 

                  wndclass.style=CS_HREDRAW|| CS_VREDRAW; //改变窗口大小则重绘

                  wndclass.lpfnWndProc=WindowProc;  //窗口函数为WindowProc()

                  wndclass.cbClsExtra=0; //窗口类无扩展

                  wndclass.cbWndExtra=0;       //窗口实例无扩展

                  wndclass.hInstance=hinstance;     //注册窗口类实例句柄

                  wndclass.hIcon=LoadIcon(NULL,IDI_APPLICATION);          //使用光标箭头

                  wndclass.hCursor=LoadCursor(NULL, IDC_HELP);      //指定鼠标箭头的样式

                  wndclass.hbrBackground=(HBRUSH)GetStockObject(BLACK_BRUSH);               //窗口背景为黑色

                  wndclass.lpszMenuName=NULL;           //窗口默认无菜单

                  wndclass.lpszClassName="Windows窗口创建";         //窗口类名为"Windows窗口创建"

 

                  if(!RegisterClass(&wndclass))         //此为注册类的函数

                          {

                                   returnfalse;    //注册不成功,返回false

                          }

 

                  //创建窗口的函数

                  hwnd=CreateWindow("Windows窗口创建" ,     //窗口类名为"Windows窗口创建"

                          "Windows窗口创建",   //窗口的名称为“Windows窗口创建”，即窗口标题栏显示的窗口名称

                          WS_OVERLAPPEDWINDOW, //重叠式窗口

                          CW_USEDEFAULT,CW_USEDEFAULT,    //窗口左上角在屏幕上的默认位置

                          CW_USEDEFAULT,CW_USEDEFAULT,    //窗口的宽度和高度

                          NULL,      //窗口无父类窗口

                          NULL,      //窗口无主菜单

                          hinstance,        //创建此窗口的实例句柄

                          NULL        //此窗口无创建参数

                  );

         ShowWindow(hwnd,nCmdShow); //显示窗口

         UpdateWindow(hwnd);          //不断的更新窗口的客户区

 

         while(GetMessage(&msg,NULL,0,0))    //捕获消息

         {

                  TranslateMessage(&msg);              //键盘消息转换

                  DispatchMessage(&msg);               //派送消息给窗口函数

         }

         returnmsg.wParam;       //返回退出值

}

 

LRESULT CALLBACK WindowProc(HWND hwnd,UINTmessage,WPARAM wParam,LPARAM lParam)               //窗口函数

{

         switch(message)

         {

                  caseWM_PAINT:             //重画窗口客户区消息处理

                          HDChdc; //定义设备句柄

                          PAINTSTRUCTps;            //定义绘图结构体变量

                          hdc=BeginPaint(hwnd,&ps);  //获取要重画的窗口的设备描述表句柄

                          TextOut(hdc,15,20,"Windows窗口创建的过程!",22);                //输出到窗口的文本

                          EndPaint(hwnd,&ps);               //结束重画

                          return0;

                  caseWM_DESTROY:               //撤销窗口消息处理

                          PostQuitMessage(0);               //产生退出程序消息WM_QUIT

                          return0; 

         }

         returnDefWindowProc(hwnd,message,wParam,lParam);

}

#include<windows.h>
#include<stdio.h>
LRESULT CALLBACK WinZhangProc(
	HWND hwnd.
	UNIT uMsg,
	WPARAM wParam,
	LPARAM lParam
	);
int WINAPI WinMain(
	HINSTANCE hInstance,
	HINSTANCE hPrevInstance,
	LPSTR lpCmdLine,
	int nCmdshow
	)
{
	WNDCLASS wndcls;
	wndcls.cbClsExtra = 0;
	wndcls.cbWndExtra = 0;
	wndcls.hbrBackground = (HBRUSH)GetStockObject(BLACK_BRUSH);
	wndcls.hCursor = LoadCursor(NULL, IDC_CROSS);
	wndcls.hIcon = LoadIcon(NULL, IDI_ERROR);
	wndcls.hInstance = hInstance;
	wndcls.lpfnWndProc = WinZhangProc;
	wndcls.lpszClassName = "zhang2019";
	wndcls.lpszMenuName = NULL;
	wndcls.style = CS_HREDRAW | CS_VREDRAW;
	RegisterClass(&wndcls);

	HWND hwnd;
	hwnd = CreateWindow("Zhang2019", "http://www.baidu.com", WS_OVERLAPPEDWINDOW, 0, 0, 600, 400, NULL, NULL, hInstance, null);

	ShowWindow(hwnd, SW_SHOWNORMAL);
	UpdateWindow(hwnd);

	MSG msg;
	while (GetMessage(&msg, NULL, 0, 0))
	{
		TranslateMessage(&msg);
		DispatchMessage(&msg);
	}
	return msg.wParam;
}

LRESULT CALLBACK WinZhangProc(
	HWND hwnd.
	UNIT uMsg,
	WPARAM wParam,
	LPARAM lParam
	)
{
	switch (uMsg)
	{
		case WM_CHAR;
			char szChar[20];
			sprintf(szChar, "char code is %d", WParam);
			MessageBox(hwnd, szChar, "char", 0);
			break;
		case WM_LBUTTONDOWN;
			MessageBox(hwnd, "mouse clicked", "message", 0);
			HDC hdc;
			hdc = GetDC(hwnd);
			TextOut(hdc, 0, 50, "程序员之家", strlen("程序员之家"));
			break;
		case WM_PAINT;
			HDC hDC;
			PAINTSTRUCT ps;
			hDC = BeginPaint(hwnd, &ps);
			break;
		case WM_CLOSE;
			if (IDYES == MessageBox(hwnd, "是否结束？", "message", MB_YESNO))
			{
			DestroyWindow(hwnd);
			}
			break;
			case WM_DESTROY:
		    	PostQuitMessage(0);
				break;
			default:
				return DefWindowProc(hwnd, uMsg, wParam, lParam);
	}
	return 0;
}

#include<stdio.h>
int main()
{
	int lonth = 400;
	int width = 300;
	int s=lonth*width;
	printf("s=%d\n", s);
	getchar();
	return 0;

}

#include<stdio.h>
int main()
{
	int year = 2019;
	int month = 1;
	int day = 1;
	printf("%d-%02d-%02d",year,month,day);
	getchar();
	return 0;

}

#include<stdio.h>
int main()
{
	float r = 10.2;
	float pai = 3.14;
	float s=pai*r*r;
	printf("%.2f",s);
	getchar();
	return 0;

}

#include<stdio.h>
int main()
{
	char arr[5][3] =
	{
		{ 1, 2, 3 },
		{ 1, 2, 3 },
		{ 1, 2, 3 },
		{ 1, 2, 3 },
		{ 1, 2, 3 },
	};
	getchar();
	return 0;

}

#include<stdio.h>
int main()
{
	char arr[5] = { 7, 7, 8, 10, 3 };
	printf("%d,%d,%d,%d,%d\n", arr[0], arr[1], arr[2], arr[3], arr[4]);
	getchar();
	return 0;

}

#include<stdio.h>
int main()
{
	int arr[5] = { 29,90,12,3,8 };
	int s = arr[0];
	arr[0] = arr[4];
	arr[4] = s;
	printf("%d,%d,%d,%d,%d\n", arr[0], arr[1], arr[2], arr[3], arr[4]);
	getchar();
	return 0;

}

#include<stdio.h>
int main()
{
	int arr[5] = { 29,-33,32,3,-80};
	int max = arr[0];
	int max_index = 0;
	for (int i = 1; i < 4; i++)
	{
		if (arr[i] > max)
		{
			max = arr[i];
			max_index = i+1;
		}
	}
	printf("第%d个数的最大值为%d", max_index, max);
	getchar();
	return 0;
}

#include<stdio.h>
int main()
{
	int arr[5] = { 29, 90, 12, 3, 8 };
	int sum = 1;
	for (int i = 0; i < 5; i++)
	{
		sum *= arr[i];
	}
	printf("%d",sum);
	getchar();
	return 0;
}


#include<stdio.h>
int main()
{
	char str[7] = "helloi";

	return 0;
}

#include<stdio.h>
int main()
{
	char str[] = "hello";
	printf("str:%s",str);
	getchar();
	return 0;
}

#include<stdio.h>
int main()
{
	char str[120] = {"文件路径：w:\\cprojects\\examples\\test.c"};
	printf("%s\n",str);
	getchar();
	return 0;
}

#include <stdio.h>
#include <string.h>

int main()
{
	char name[10] = "shaofa";
	strcpy_s(name, 10, "shaodong"); // 修改数组name的内容

	getchar();
	return 0;
}

#include<stdio.h>
int main()
{
	int a = 10;
	int b = 2;
	a += b-1;
	printf("%d\n",a);
	getchar();
	return 0;
}

#include<stdio.h>
int main()
{
	int n = 367;
	char buf[4];
	buf[2] = n % 10;//7
	n = n / 10;
	buf[1] = n% 10;
	n = n / 10;
	buf[0] = n % 10;
	//printf("%d%d%d",buf[0], buf[1]，buf[2]);
	return 0;
}

#include<stdio.h>
int main()
{
	printf("%d\n", 0  ?100:200);
	printf("%d\n", 1  ? 100 : 200);
	printf("%d\n", -2 ? 100 : 200);
	getchar();
	return 0;
}

#include<stdio.h>
int main()
{
	int score = 57;
	//printf("input score");
	//scanf_s("%d", &score);
	printf("%c\n", score >= 90 ? 'A' :( score<60?'C':'B'));
	getchar();
	return 0;
}

#include<stdio.h>
int main()
{
	unsigned char m = 181;
	unsigned char n = ~m;
	printf("n:%u\n", n);
	getchar();
	return 0;
}

#include<stdio.h>
int main()
{
	printf("n:%u\n",0xA7>>8);
	getchar();
	return 0;
}

#include<stdio.h>
int main()
{
	int x = 87;
	if (x < 60)
	{
		printf("c\n");
	}
	else if (x < 80)
	{
		printf("b\n");
	}
	else
	{
		printf("c\n");
	}
	getchar();
	return 0;
}

#define _CRT_SECURE_NO_WARNINGS
#include<stdio.h>
#include<iostream>
int main()
{
	int n = -1;
	printf("请输入字母");
	scanf("%d", &n);

	if (n==0||n==6)
	{
		printf("home\n");
	}
	else if (n>=1&&n<=5)
	{
		printf("work\n");
	}
	else
	{
		printf("wrong");
	}
	system("pause");
	return 0;

}

#define _CRT_SECURE_NO_WARNINGS
#include<stdio.h>
#include<iostream>
int main()
{
	int ch = 0;
	switch (ch)
	{
	case 1:
		printf("office\n");
	case 2:
		printf("home\n");
	default:
		printf("nothing\n");
		break;
	}
	system("pause");
	return 0;

}

#define _CRT_SECURE_NO_WARNINGS
#include<stdio.h>
#include<iostream>
int main()
{
	int ch = 0;
	switch (ch)
	{
	case 1:
		printf("office\n");
		break;
	case 2:
		printf("home\n");
		break;
	default:
		printf("nothing\n");
		break;
	}
	system("pause");
	return 0;

}

#define _CRT_SECURE_NO_WARNINGS
#include<stdio.h>
#include<iostream>
int main()
{
	int count = 0;
	int i;
	for (i = 0; i < 100; i++)
	{
		if (i % 2)
			continue;
		count++;
		printf("%d\n",i);
	}
	printf("%d\n",count);
	system("pause");
	return 0;
}

#define _CRT_SECURE_NO_WARNINGS
#include<stdio.h>
#include<iostream>
int main()
{
	unsigned char buf[4] = { 1, 2, 3, 13 };
	for (int i = 0; i < 4; i++)
	{
		printf ("%02X\n", buf[i]);
	}
	system("pause");
	return 0;
}

#define _CRT_SECURE_NO_WARNINGS
#include<stdio.h>
#include<iostream>
int main()
{
	unsigned char buf[8] = { 1, 2, 3, 4,5,6,7,8 };
	for (int i = 0; i < 8; i++)
	{
		printf ("%02X\n", buf[i]);
		if ((i + 1) % 4 == 0)
			printf("\n");
	}
	system("pause");
	return 0;
}

#define _CRT_SECURE_NO_WARNINGS
#include<stdio.h>
#include<iostream>
int main()
{
	int n=5;
	int buf[5] = { 1, 2.3,4,5};
	for (int i = 0; i < 5 / 2; i++)
	{
		int t = buf[i];
		buf[i]=buf[n - 1 - i];
		buf[n - 1 - i]=t;

	}
	for (int j = 0; j < 5; j++)
	{
		printf("%d\n",buf[j]);
	}
	system("pause");
	return 0;
}

#define _CRT_SECURE_NO_WARNINGS
#include<stdio.h>
#include<iostream>
int main()
{
	char buf[100];
	int i = 0;
	while (i<100)
	{
		buf[i] = i + 1;
		i++;
	}

	system("pause");
	return 0;
}

#define _CRT_SECURE_NO_WARNINGS
#include<stdio.h>
#include<iostream>
int main()
{
	int buf[100];
	int count = 0;
	while (1)
	{
		int n = 0;
		printf("qingshuru");
		scanf("%d", &n);
		if (n <= 0)
			break;
		buf[count] = n;
		count++;
	}
	printf("%d",count);
	system("pause");
	return 0;
}

#define _CRT_SECURE_NO_WARNINGS
#include<stdio.h>
#include<iostream>
int main()
{
	int buf[100];
	int count = 0;
	while (1)
	{
		int n = 0;
		printf("qingshuru");
		scanf("%d", &n);
		if (n <= 0)
			break;
		buf[count] = n;
		count++;
	}
	printf("%d",count);
	int sum = 0;
	for ( int i = 0; i < count; i++)
	{
		sum += buf[i];
	}
	printf("%d", sum);
	system("pause");
	return 0;
}

#define _CRT_SECURE_NO_WARNINGS
#include<stdio.h>
#include<iostream>
int main()
{
	int n = 345656;
	int count = 0;
	while (n!=0)
	{
		n = n / 10;
		count++;
	}
	printf("%d", count);
	system("pause");
	return 0;
}

#define _CRT_SECURE_NO_WARNINGS
#include<stdio.h>
#include<iostream>
int main()
{
	int n = 0;
	do
	{
		printf("请输入一个数：");
		scanf("%d", &n);
	} 
	while (n<0||n>100);
	printf("%d", n);
	system("pause");
	return 0;
}

#define _CRT_SECURE_NO_WARNINGS
#include<stdio.h>
#include<iostream>
int main()
{
	int a = 0;
	int b = 0;
	a += 10;
	b = -5;
	int c = a*b;
	printf("%d\n", c);
	system("pause");
	return 0;
}

#define _CRT_SECURE_NO_WARNINGS
#include<stdio.h>
#include<iostream>
int main()
{
	double x;
	double y;
	printf("please input");
	scanf("%lf,%lf", &x,&y);
	double result = x + y;
	printf("result: %lf\n", result);
	system("pause");
	return 0;
}

#define _CRT_SECURE_NO_WARNINGS
#include<stdio.h>
#include<iostream>
#include<stdbool.h>
int main()
{
	int a = 0;
	printf("请输入一个数字");
	scanf("%d\n",&a);
	if (a % 2==0)
	{
		printf("偶数");
	}
	else
	{
		printf("奇数");
	}
	system("pause");
	return 0;
}

#define _CRT_SECURE_NO_WARNINGS
#include<stdio.h>
#include<iostream>
#include<stdbool.h>
int main()
{
	int a = 0;
	printf("请输入一个数字");
	scanf("%d\n",&a);
	if ((a % 3==0)&&(a%7==0))
	{
		printf("ok");
	}
	else
	{
		printf("nook");
	}
	system("pause");
	return 0;
}

#define _CRT_SECURE_NO_WARNINGS
#include<stdio.h>
#include<iostream>
#include<stdbool.h>
int main()
{
	int a = 0;
	printf("请输入一个数字");
	scanf("%d\n",&a);
	if ((a>=70)&&(a<=80))
	{
		printf("ok");
	}
	else
	{
		printf("nook");
	}
	system("pause");
	return 0;
}

#define _CRT_SECURE_NO_WARNINGS
#include<stdio.h>
#include<iostream>
#include<stdbool.h>
int main()
{
	int a = 0;
	printf("请输入一个数字");
	scanf("%d\n",&a);
	if (a>=0)
	{
		printf("%d",a);
	}
	else
	{
		printf("%d",-a);
	}
	system("pause");
	return 0;
}

#define _CRT_SECURE_NO_WARNINGS
#include<stdio.h>
#include<iostream>
#include<stdbool.h>
int main()
{
	int a = 0;
	int sum = 0;
	printf("请输入一个数字");
	scanf("%d\n",&a);
	for (int i = 0; i < a; i++)
	{
		sum += (i + 1);
	}
	printf("%d\n", sum);
	system("pause");
	return 0;
}

#define _CRT_SECURE_NO_WARNINGS
#include<stdio.h>
#include<iostream>
#include<stdbool.h>
int main()
{
	int a = 0;
	int sum = 0;
	int b = 0;
	//printf("请输入一个数字");
	//scanf("%d\n",&a);
	for (int i = 1; i <= 100; i++)
	{
		if (i % 2 != 0)
		{
			sum += i*i;
		}
	}
	printf("%d\n", sum);
	system("pause");
	return 0;
}

#define _CRT_SECURE_NO_WARNINGS
#include<stdio.h>
#include<iostream>
#include<stdbool.h>
int main()
{
	int n = 5;
	int sum = 0;
	for (int i = 2; i < n; i++)
	{
		if (n%i != 0)
		{
			sum = sum + 1;
		}

	}
	if (sum == (n-2))
		{
			printf("质数");
		}
	else 
	{ 
		printf("不是质数");
        	}
	system("pause");
	return 0;
}


#define _CRT_SECURE_NO_WARNINGS
#include<stdio.h>
#include<iostream>
#include<stdbool.h>
int main()
{
	int count =0;
	for (int i = 100; i <=200 ; i++)
	{
		if (i%7== 0)
		{
			count++;
			if (count<=10)
			{
				printf("%d\n", i);
			}
		}

	}
	system("pause");
	return 0;
}

#define _CRT_SECURE_NO_WARNINGS
#include<stdio.h>
#include<iostream>
#include<stdbool.h>
int main()
{
	int year = 2100;
	if (year%100==0)
	{
		if (year%400==0)
		printf("%d是闰年",year);
		
		else
		printf("%d不是闰年", year);
	}
	else
	{
		if (year%4==0)
			printf("%d是闰年", year);

		else
	    printf("%d不是闰年", year);
	}
	system("pause");
	return 0;
}